// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
		return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, and the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		var char mem;
		let mem = Memory.peek(24576);
		do Memory.poke(24576, 0);
		if (mem > 0) {
			return mem;
		} else {
			return 0;
		}
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
		var char isPressed, isReleased;
		let isPressed = 0;
		let isReleased = 0;
		
		while (isReleased = 0) {
			let isPressed = Keyboard.keyPressed();
			if (isPressed > 0) {
				do Output.printChar(isPressed);
				let isReleased = 1;
			}
		}
		return isPressed;
    }

    /**								
     * prints the message on the screen and then reads the next line
     * (until a newline character) from the keyboard and returns its value.
     */
    function String readLine(String message) {
		var String line;
		var char c;
		let line = String.new(80);
		do Output.printString(message);
		
		let c = Keyboard.readChar();
		while (~(c = 128)) {
			//do Output.printChar(c);
			if (c = 129) {
				do line.eraseLastChar(c);
			} else {
				do line.appendChar(c);
			}
			let c = Keyboard.readChar();
		}
		return line;
    }   

    /**								
     * prints the message on the screen and then reads the next line
     * (until a newline character) from the keyboard and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
		var String line;
		let line = Keyboard.readLine(message);
		return line.intValue();
    }
}
